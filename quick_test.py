# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# quick_test.py

import os
import sys

def test_config():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    env_vars = {}
    with open('.env', 'r', encoding='utf-8') as f:
        for line in f:
            if '=' in line and not line.startswith('#'):
                key, value = line.strip().split('=', 1)
                env_vars[key] = value
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    required = ['MAINTENANCE_BOT_TOKEN', 'ADMIN_IDS']
    missing = []
    
    for var in required:
        if var not in env_vars or not env_vars[var] or env_vars[var] in ['YOUR_BOT_TOKEN_HERE', '123456789,987654321']:
            missing.append(var)
    
    if missing:
        print(f"‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing)}")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import telebot
        import aiofiles
        import aiohttp
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        return False
    
    print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞.")
    return True

if __name__ == "__main__":
    if not test_config():
        sys.exit(1)
